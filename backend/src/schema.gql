# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  accessToken: String!
  user: User!
}

type Comment {
  author: User!
  content: String!
  createdAt: DateTime!
  id: ID!
  task: Task!
  updatedAt: DateTime!
}

input CreateCommentInput {
  content: String!
  taskId: String!
}

input CreateProjectInput {
  description: String
  name: String!
}

input CreateSectionInput {
  name: String!
  order: Float
  projectId: ID!
}

input CreateTaskInput {
  assigneeId: ID
  description: String
  dueDate: DateTime
  order: Float
  priority: TaskPriority
  sectionId: ID!
  title: String!
}

input CreateUserInput {
  email: String!
  name: String
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

input MoveTaskInput {
  newOrder: Float!
  targetSectionId: ID!
  taskId: ID!
}

type Mutation {
  clearAllNotifications: Boolean!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  createProject(createProjectInput: CreateProjectInput!): Project!
  createSection(createSectionInput: CreateSectionInput!): Section!
  createTask(createTaskInput: CreateTaskInput!): Task!
  login(loginInput: LoginInput!): AuthPayload!
  markAllNotificationsAsRead: Boolean!
  markNotificationAsRead(notificationId: String!): Boolean!
  moveTask(moveTaskInput: MoveTaskInput!): Task!
  removeComment(id: ID!): Boolean!
  removeProject(id: ID!): Boolean!
  removeSection(id: ID!): Boolean!
  removeTask(id: ID!): Boolean!
  signup(createUserInput: CreateUserInput!): AuthPayload!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  updateNotificationPreferences(updateNotificationPreferencesInput: UpdateNotificationPreferencesInput!): NotificationPreferences!
  updateProject(updateProjectInput: UpdateProjectInput!): Project!
  updateSection(updateSectionInput: UpdateSectionInput!): Section!
  updateTask(updateTaskInput: UpdateTaskInput!): Task!
}

type Notification {
  createdAt: DateTime!
  entityId: String
  entityType: String
  id: ID!
  message: String!
  read: Boolean!
  type: NotificationType!
  updatedAt: DateTime!
  user: User!
}

type NotificationPreferences {
  createdAt: DateTime!
  deadlineApproaching: Boolean!
  emailNotifications: Boolean!
  id: ID!
  projectCreated: Boolean!
  projectUpdated: Boolean!
  pushNotifications: Boolean!
  taskAssigned: Boolean!
  taskComment: Boolean!
  taskCompleted: Boolean!
  taskMoved: Boolean!
  updatedAt: DateTime!
  user: User!
}

"""Tipos de notificações disponíveis no sistema"""
enum NotificationType {
  DEADLINE_APPROACHING
  PROJECT_CREATED
  PROJECT_UPDATED
  SYSTEM
  TASK_ASSIGNED
  TASK_COMMENT
  TASK_COMPLETED
  TASK_MOVED
}

type Project {
  createdAt: DateTime!
  description: String
  id: ID!
  name: String!
  owner: User!
  sections: [Section!]
  updatedAt: DateTime!
}

type Query {
  comment(id: ID!): Comment!
  comments(taskId: ID!): [Comment!]!
  notificationPreferences: NotificationPreferences!
  notifications(limit: Float! = 50, offset: Float! = 0): [Notification!]!
  project(id: ID!): Project!
  projects: [Project!]!
  section(id: ID!): Section!
  task(id: ID!): Task!
  unreadNotificationsCount: Float!
}

type Section {
  createdAt: DateTime!
  id: ID!
  name: String!
  order: Float!
  project: Project!
  tasks: [Task!]
  updatedAt: DateTime!
}

type Task {
  assignee: User
  comments: [Comment!]
  completed: Boolean!
  createdAt: DateTime!
  description: String
  dueDate: DateTime
  id: ID!
  order: Float!
  priority: TaskPriority!
  section: Section!
  title: String!
  updatedAt: DateTime!
}

enum TaskPriority {
  HIGH
  LOW
  MEDIUM
  URGENT
}

input UpdateCommentInput {
  content: String
  id: ID!
  taskId: String
}

input UpdateNotificationPreferencesInput {
  deadlineApproaching: Boolean
  emailNotifications: Boolean
  projectCreated: Boolean
  projectUpdated: Boolean
  pushNotifications: Boolean
  taskAssigned: Boolean
  taskComment: Boolean
  taskCompleted: Boolean
  taskMoved: Boolean
}

input UpdateProjectInput {
  description: String
  id: ID!
  name: String
}

input UpdateSectionInput {
  id: ID!
  name: String
  order: Float
  projectId: ID
}

input UpdateTaskInput {
  assigneeId: ID
  description: String
  dueDate: DateTime
  id: ID!
  order: Float
  priority: TaskPriority
  sectionId: ID
  title: String
}

type User {
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  notificationPreferences: NotificationPreferences
  projects: [Project!]
  updatedAt: DateTime!
}